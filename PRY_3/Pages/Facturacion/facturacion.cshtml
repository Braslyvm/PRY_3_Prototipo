@page
@model PRY_3.Pages.MenuModel
@{
    ViewData["Title"] = "Facturacion";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ventana de Facturación de Productos</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
        <style>
        .container {
            background-color: white;
            padding: 20px;
            text-align: center;
        }

        h1 {
            color: #1b1a1a;
            margin-bottom: 15px;
        }

        label {
            color: #4CAF50; 
            font-weight: bold;
            margin-bottom: 5px;
            display: block; 
        }

        input {
            margin: 10px 0;
            padding: 10px;
            border: 2px solid #4CAF50; /* Verde */
            border-radius: 5px;
            font-size: 16px;
            width: 100%; 
            transition: border-color 0.3s; 
        }

        input:focus {
            border-color: #ff9966; 
            outline: none;
        }

        .button-container {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }

        button {
            position: relative;
            overflow: hidden;
            outline: none;
            cursor: pointer;A
            border-radius: 5px;
            border: none;
            font-family: "Inter", sans-serif;
            padding: 1em 1.5em;
            color: white;
        }

        .default-btn {
            background-image: linear-gradient(90.1deg, rgba(84, 212, 228, 1) 0.2%, rgba(68, 36, 164, 1) 99.9%);
            transition: all 0.3s ease;
        }

        .hover-btn {
            position: absolute;
            inset: 0;
            background: linear-gradient(63deg, rgba(26, 35, 126, 1) 0%, rgba(69, 39, 160, 1) 100%);
            box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;
            transform: translate(0%, 100%);
            transition: transform 0.3s ease;
        }

        button:hover .default-btn {
            transform: translate(0%, -100%);
        }

        button:hover .hover-btn {
            transform: translate(0%, 0%);
        }
         
 .default-btn3 {
     background-image: linear-gradient(90.1deg, rgba(84, 212, 228, 1) 0.2%, rgba(68, 36, 164, 1) 99.9%);
     transition: all 0.3s ease;
 }
 .hover-btn3 {
     position: absolute;
     inset: 0;
     background: linear-gradient(63deg, rgba(26, 35, 126, 1) 0%, rgba(69, 39, 160, 1) 100%);
     box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;
     transform: translate(0%, 100%);
     transition: transform 0.3s ease;
 }
 button:hover .default-btn3 {
     transform: translate(0%, -100%);
 }
 button:hover .hover-btn {
     transform: translate(0%, 0%);
 }

        ul {
            list-style-type: none;
            padding: 0;
            flex-grow: 1;
            height: 350px;
            overflow-y: auto;
            border: 1px solid #ddd;
            margin-top: 10px;
        }
        #mensaje-vacio {
            color: #999;
            text-align: center;
            padding: 20px;
        }

li {
    background-color: #f8f8f8; 
    margin: 5px 0;
    padding: 10px;
    border: 1px solid #070707;
    border-radius: 5px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

li button {
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
    margin-left: 5px;
}



/* Botón de cantidad */
li input[type="number"] {
    width: 50px; 
    margin: 0 10px; 
}



/* Botón de eliminar */
li button:last-child {
    background-color: #f44336; 
}

li button:last-child:hover {
    background-color: #d32f2f; 
}


        .input-button-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px; 
}

.input-button-container {
    display: flex;
    align-items: center;
    justify-content: flex-start; /* Alinea el contenido hacia la izquierda */
}

.input-button-container input {
    width: 80%; 
}

.input-button-container button {
    flex-shrink: 0; 
}
.input-button-container2 {
    margin-top: 310px; /* Empuja el contenedor al final */
    display: flex;
    justify-content: space-between;
}

.input-button-container2 button {
    flex: 0 0 auto; 
    padding: 0.5em 1em; 
    min-width: 80px; 
    max-width: 120px; 
    border-radius: 5px; 
    font-size: 14px; 
}


        #lucky {
            font-size: 2em;
            color: #fab142; 
            margin-bottom: 20px;
            text-shadow: 2px 2px 0 #fab142, -2px -2px 0 #1fdf0e; 
            margin-top: 100;
        }
 

        
        .ticket-modal {
            display: none; 
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            justify-content: center;
            align-items: center;
            z-index: 1000; 
        }
        #ticketModalContent {
            background: rgb(242, 241, 247);
            border-radius: 5px;
            padding: 20px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
            text-align: center;
        }
        .close-btn {
            background-color: #1e2ac9; 
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
        }
        .close-btn:hover {
            background-color: #dfe227; 
        }

        .group {
            display: flex;
            line-height: 28px;
            align-items: center;
            position: relative;
        }

        .form-control2 {
            height: 40px; /* Aumentar la altura */
            line-height: 28px;
            padding: 0 1rem;
            width: 500px;
            margin-left: -90px;
            padding-left: 2.5rem;
            border: 2px solid transparent;
            border-radius: 8px;
            outline: none;
            background-color: #ffffff;
            color: #0d0c22;
            box-shadow: 0 0 5px rgb(138, 156, 136), 0 0 0 10px #567c5d1a;
        }
       
    </style>
</head>
<body>
    <div class="container">
        <h2 class="mb-4 text-center" style="color: #eeaa0d;"><i class="fa-solid fa-receipt"> FacturaciÓn</i></h2>
        <label for="nombre"></label>
     
        <div class="input-button-container">
            <div class="group">
                <svg class="icon" aria-hidden="true" style="position: absolute; left: 1rem; fill: #777; width: 1rem; height: 1rem; margin-left: -90px;" viewBox="0 0 24 24" width="26" height="16">
                    <g>
                        <path d="M21.53 20.47l-3.66-3.66C19.195 15.24 20 13.214 20 11c0-4.97-4.03-9-9-9s-9 4.03-9 9 4.03 9 9 9c2.215 0 4.24-.804 5.808-2.13l3.66 3.66c.147.146.34.22.53.22s.385-.073.53-.22c.295-.293.295-.767.002-1.06zM3.5 11c0-4.135 3.365-7.5 7.5-7.5s7.5 3.365 7.5 7.5-3.365 7.5-7.5 7.5-7.5-3.365-7.5-7.5z"></path>
                    </g>
                </svg>
                <input id="nombre" type="text" class="form-control2 me-3" style="width: 845px; $input-focus-color: #eeaa0d" id="busqueda" placeholder="Buscar productos..." oninput="filtrarProductos()">
            </div>
            <button type="button" class="btn btn-success" style="color: #fff;" onclick="agregarProducto()">
                Agregar
            </button>
        </div>

        <style>
            .factura-container {
                display: flex;
                align-items: flex-start; /* Alinea los elementos en la parte superior */
                justify-content: space-between; /* Deja espacio entre la lista y el total */
                width: 100%;
                margin-bottom: -150px;
                margin-top: 20px;
            }

            #factura {
                
                flex: 3;
            }

            .total-container {
                flex: 1;
                text-align: right;
                padding-left: 20px;
                display: flex;
                flex-direction: column;
            }

            .total-container h3 {
                margin: 0;
                font-size: 1.5em;
                color: #1b1a1a;
            }

            .cantidad-container {
                display: flex;
                align-items: center;
                gap: 5px; /* Espacio entre botones e input */
                justify-content: flex-end; /* Alinear elementos a la derecha */
            }

            ul#factura li {
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

        </style>
        <div class="factura-container">
            <ul id="factura" style="margin-left: -100px; height: 450px;">
                <div id="mensaje-vacio" style="display: none;">No hay productos en la factura</div>
            </ul>

            <div class="total-container mt-4">
                <h3 id="subTotal">Sub Total: ₡0.00</h3>
                <h3 id="ivaTotal">IVA: ₡0.00</h3>
                <h3 id="total">Total: ₡0.00</h3>
                <div class="input-button-container2">
                    <button type="button" class="btn btn-warning" style="color: #fff;" onclick="finalizarFactura()">
                        Finalizar
                    </button>
                    <button type="button" class="btn btn-danger" style="" onclick="confirmarAccion()">
                        Cancelar
                    </button>
                </div>
            </div>
        </div>

    </div>

    <div id="ticketModal" class="ticket-modal">
        <div id="ticketModalContent">
            <h2>Ticket de Factura</h2>
            <div id="ticketContent"></div>
            <h3 id="ticketTotal"></h3> 
            <button class="close-btn" onclick="realizarPago()">Siguiente</button>
        </div>
    </div>

    <script>
        const productos = [
            { codigo: "001", nombre: "Manzana", tipo: "Fruta", precio: 100, cantidad: 1 },
            { codigo: "002", nombre: "Pan", tipo: "Panadería", precio: 1000, cantidad: 1 },
            { codigo: "003", nombre: "Leche", tipo: "Lácteos", precio: 750, cantidad: 1 },
            { codigo: "004", nombre: "Cafe", tipo: "Fruta", precio: 500, cantidad: 1 }
        ];
        const factura = [];

        document.getElementById('nombre').addEventListener('keyup', function(event) {
            if (event.key === 'Enter') {
                
                 agregarProducto();
                
                
            }
        });

        function agregarProducto() {
            const nombre = document.getElementById('nombre').value;
            const producto = productos.find(p => p.nombre.toLowerCase() === nombre.toLowerCase() || p.codigo === nombre);

            if (!producto) {
                 Swal.fire({
        title: 'Atención',
        text: 'Producto no encontrado',
        icon: 'info',
        timer: 6000, 
        timerProgressBar: true 
    });
                //document.getElementById('nombre').value = '';
                return;
            }

            const productoEnFactura = factura.find(item => item.codigo === producto.codigo);
            if (productoEnFactura) {
                modificarCantidad(producto.nombre, productoEnFactura.cantidad + 1);
            } else {
                factura.push({ ...producto });
            }

            actualizarLista();
            document.getElementById('nombre').value = '';
        }
        


        function modificarCantidad(nombre, cantidad) {
            const producto = factura.find(p => p.nombre.toLowerCase() === nombre.toLowerCase());
            if (producto) {
                producto.cantidad = cantidad;
                if (producto.cantidad <= 0) {
                    eliminarProducto(producto.nombre);
                } else {
                    actualizarLista();
                }
            } else {
                alert('Producto no encontrado en la factura');
            }
            
  
        }

        function realizarPago() {
            window.location.href = `/Pagos/Pago?montoTotal=${calcularTotal().toFixed(2)}`;
        }

        function finalizarFactura() {
         
          if (factura.length === 0) {
            
            Swal.fire(
                'Atención',
                'No hay productos en la factura',
                'info'
            );
            return; // Termina la ejecución si no hay productos
        }
         
    
            const ticketContent = document.getElementById('ticketContent');
            ticketContent.innerHTML = factura.map(producto => `${producto.nombre} - ₡${producto.precio} x ${producto.cantidad}`).join('<br>');
            
            const ticketTotal = document.getElementById('ticketTotal');
            ticketTotal.innerHTML = `Total: ₡${calcularTotal().toFixed(2)}`;
            
            document.getElementById('ticketModal').style.display = 'flex';
        }

        function cerrarModal() {
            document.getElementById('ticketModal').style.display = 'none';
            window.location.href = '/Facturacion/facturacion';
        }

        function actualizarLista() {
            const lista = document.getElementById('factura');
            lista.innerHTML = '';

            if (factura.length === 0) {
                const mensajeVacio = document.getElementById('mensaje-vacio');
                mensajeVacio.style.display = 'block';
                lista.appendChild(mensajeVacio);
            } else {
                factura.forEach(producto => {
                    const li = document.createElement('li');

                    // Detalle del producto
                    li.innerHTML = `${producto.nombre} - ₡${producto.precio} x `;

                    // Contenedor para cantidad y botones
                    const cantidadContainer = document.createElement('div');
                    cantidadContainer.className = 'cantidad-container';

                    // Botón disminuir
                    const btnDisminuir = document.createElement('button');
                    btnDisminuir.innerHTML = '<i class="fas fa-minus"></i>';
                    btnDisminuir.classList.add('btn', 'btn-outline-danger', 'btn-sm');
                    btnDisminuir.onclick = () => modificarCantidad(producto.nombre, producto.cantidad - 1);

                    // Input de cantidad
                    const inputCantidad = document.createElement('input');
                    inputCantidad.type = 'number';
                    inputCantidad.value = producto.cantidad;
                    inputCantidad.classList.add('form-control', 'form-control-sm');
                    inputCantidad.style.width = '50px';
                    inputCantidad.onchange = () => modificarCantidad(producto.nombre, parseInt(inputCantidad.value));

                    // Botón incrementar
                    const btnIncrementar = document.createElement('button');
                    btnIncrementar.innerHTML = '<i class="fas fa-plus"></i>';
                    btnIncrementar.classList.add('btn', 'btn-outline-success', 'btn-sm');
                    btnIncrementar.onclick = () => modificarCantidad(producto.nombre, producto.cantidad + 1);

                    // Botón eliminar
                    const btnEliminar = document.createElement('button');
                    btnEliminar.innerHTML = '<i class="fas fa-trash-alt"></i>';
                    btnEliminar.classList.add('btn', 'btn-danger', 'btn-sm');
                    btnEliminar.onclick = () => eliminarProducto(producto.nombre);

                    // Alinea los elementos dentro del contenedor
                    cantidadContainer.appendChild(btnDisminuir);
                    cantidadContainer.appendChild(inputCantidad);
                    cantidadContainer.appendChild(btnIncrementar);
                    cantidadContainer.appendChild(btnEliminar);

                    // Añadir cantidad y botones al elemento de lista
                    li.appendChild(cantidadContainer);

                    lista.appendChild(li);
                    const ticketContent = document.getElementById('ticketContent');
            ticketContent.innerHTML = factura.map(producto => `${producto.nombre} - ₡${producto.precio} x ${producto.cantidad}`).join('<br>');
            
            
                    const sub = document.getElementById('subTotal');
                    sub.innerHTML = `Sub Total: ₡${calcularTotal().toFixed(2)}`;
                    const ivaTotal = document.getElementById('ivaTotal');
                    ivaTotal.innerHTML = `IVA: ₡${(calcularTotal().toFixed(2)) * 0.13}`;
                    const total = document.getElementById('total');
                    total.innerHTML = `Total: ₡${(calcularTotal() + ((calcularTotal().toFixed(2)) * 0.13)).toFixed(2)}`;
        
                });
            }
        }

            function calcularTotal() {
                return factura.reduce((total, producto) => total + (producto.precio * producto.cantidad), 0);
                    actualizarLista();
            }
            function eliminarProducto(nombre) {
    const index = factura.findIndex(p => p.nombre.toLowerCase() === nombre.toLowerCase());
    if (index !== -1) {
        factura[index].cantidad = 0; 
        actualizarLista();  
        factura.splice(index, 1);
        actualizarLista();  
    } else {
        alert('Producto no encontrado en la factura');
    }
    }

function confirmarAccion() {
    Swal.fire({
        title: '¿Estás seguro?',
        text: "¡No podrás revertir esta acción!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',  
        cancelButtonColor: '#d33',      
        confirmButtonText: 'Sí, continuar',
        cancelButtonText: 'Cancelar'
    }).then((result) => {
        if (result.isConfirmed) {
           window.location.href='/Facturacion/facturacion'
            Swal.fire(
                '¡Hecho!',
                'La acción se ha completado exitosamente.',
                'success'
            );
        }
    });
}

    </script>

    
</body>

</html>




















































































































































































































































